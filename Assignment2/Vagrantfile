# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.define "web" do |web|
    web.vm.hostname = "web"
    web.vm.box = "ubuntu/focal64" 
    web.vm.network "forwarded_port", guest: 80, host: 8080
    web.vm.network "private_network", ip: "192.168.57.10"
    web.vm.synced_folder "./web", "/var/www/html/"
    web.vm.provision "shell", privileged: false, inline: <<-SHELL
      sudo apt-get update
      sudo apt-get -y install build-essential libssl-dev
      curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash
      source ~/.nvm/nvm.sh
      nvm install node
      npm install axios
      npx create-react-app web
      cd web
      npm install react-router-dom 
      npm install --save styled-components
      npm install react-bootstrap bootstrap
      cd src
      mkdir pages
      cd pages
      touch Home.jsx
      cat <<EOT >> Home.jsx
import React from 'react';
import Button from 'react-bootstrap/Button';
import Form from 'react-bootstrap/Form';

function Home() {
    return (
      <Form>
        <Form.Group className="formInput" controlId="formInput">
          <Form.Label>What have you learnt today?</Form.Label>
          <Form.Control as="textarea" rows={3} placeholder="Type here~" />
          <Form.Text className="text-muted">
            Enter a new japanese character/phrase you have encountered!
          </Form.Text>
        </Form.Group>
        
        <Button variant="primary" type="submit">
          Submit
        </Button>
      </Form>
    );
}

export default Home;
EOT
      touch Log.jsx
      cat <<EOT >> Log.jsx
import React from 'react';

function Log() {
    return (
        <h1>this is the log</h1>
    );
}

export default Log;
EOT
      touch Layout.jsx
      cat <<EOT >> Layout.jsx
import React from "react";
import {Outlet} from "react-router-dom";
import Navibar from "../Navbar";

const Layout = () => {
  return (
    <>
      <Navibar />
      <Outlet />
    </>
  );
};

export default Layout;
EOT
      cd ..
      touch Navbar.jsx
      cat <<EOT >> Navbar.jsx
import React from "react";
import { BrowserRouter, Route, Link } from "react-router-dom";
import Container from 'react-bootstrap/Container';
import Nav from 'react-bootstrap/Nav';
import Navbar from 'react-bootstrap/Navbar';
import NavDropdown from 'react-bootstrap/NavDropdown';

function Navibar() {
  return (
    <Navbar bg="primary" variant="dark">
        <Container>
          <Navbar.Brand href="/">MyApp</Navbar.Brand>
          <Nav className="me-auto">
            <Nav.Link href="/">Home</Nav.Link>
            <Nav.Link href="/log">Log</Nav.Link>
          </Nav>
        </Container>
    </Navbar>
  );
}

export default Navibar;
EOT
      rm index.js
      cat <<EOT >> index.js
import ReactDOM from "react-dom";
import { BrowserRouter, Routes, Route } from "react-router-dom";
import Layout from "./pages/Layout";
import Home from "./pages/Home";
import Log from "./pages/Log";
import '../node_modules/bootstrap/dist/css/bootstrap.min.css';

export default function App() {
  return (
    <BrowserRouter>
      <Routes>
        <Route path="/" element={<Layout />}>
          <Route index element={<Home />} />
          <Route path="log" element={<Log />} />
        </Route>
      </Routes>
    </BrowserRouter>
  );
}

ReactDOM.render(<App />, document.getElementById("root"));
EOT
      # cd ..
      # npm start
    SHELL
  end
  
  config.vm.define "app" do |app|
    app.vm.hostname = "app"
    app.vm.box = "ubuntu/focal64"
    app.vm.network "private_network", ip: "192.168.57.11"
    app.vm.provision "shell", privileged: false, inline: <<-SHELL
      sudo apt-get update
      sudo apt-get -y install build-essential libssl-dev
      curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash
      source ~/.nvm/nvm.sh
      nvm install node
      npm init -y
      npm install express
      # npm install pg # node-postgres ?
      # npm install config
      npm install express-generator -g
      express app --view=pug -y
      cd app
      npm install
      npm install cors
      sed -i "s/3000/9000/" bin/www
      sed -i "6 i var cors = require('cors');" app.js
      sed -i "17 i app.use(cors());" app.js
      # npm start
    SHELL
  end

  config.vm.define "db" do |db|
    db.vm.hostname = "db"
    db.vm.box = "ubuntu/focal64"
    db.vm.network "private_network", ip: "192.168.57.12"
  end
  
end
